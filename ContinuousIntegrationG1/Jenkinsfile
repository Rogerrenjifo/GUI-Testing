pipeline {
  agent any
  environment {
    PYTHONPATH = "${WORKSPACE}"
    REPO_NAME = "${GIT_URL.split('/')[-2]}/${GIT_URL.split('/')[-1].replace('.git', '')}"
    PASSWORD=credentials('password')
    USER=credentials('user')
    BROWSER="remote_chrome"
    DEVICE="pc"
    IMPLICIT_TIMEOUT="30"
  }
  stages {          
    stage('Build Browser Environments') {    
      steps {
        script {
          catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
            bat 'docker run -d -p 4444:4444 --name chrome -p 7900:7900 --shm-size="2g" selenium/standalone-chrome:latest'
          }    
        }
      }
    }
    stage('Instalar dependencias') {
      steps {
        script{
          catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
            virtualenvDir = "${WORKSPACE}\\venv"
            bat "python -m venv ${virtualenvDir}"
            bat ".\\venv\\Scripts\\activate"
            bat "${virtualenvDir}\\Scripts\\pip install -r ${WORKSPACE}\\requeriments.txt"
          }
        }
      }
    }                                                          
    stage('Happy Path Test Cases'){
      steps {
        script{
          catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
            bat '.\\venv\\Scripts\\robot  --outputdir .\\Blueprint\\Reports -i TAB_ELEMENTS .\\Blueprint\\TestCases'
          }
        }
      }
      post {
        always {
          archiveArtifacts artifacts: 'Blueprint/Reports/log.html', fingerprint: true
        }
      }
    }
    stage('Regretions tests'){
      steps {
        script{
          catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
            bat '.\\venv\\Scripts\\robot  --outputdir .\\Blueprint\\Reports -i FLOWS .\\Blueprint\\TestCases'
          }
        }
      }
      post {
        always {
          archiveArtifacts artifacts: 'Blueprint/Reports/log.html', fingerprint: true
        }
      }
    }
    stage('Regretions tests'){
      steps {
        script{
          catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
            bat '.\\venv\\Scripts\\robot  --outputdir .\\Blueprint\\Reports -i FLOWS .\\Blueprint\\TestCases'
          }
        }
      }
      post {
        always {
          archiveArtifacts artifacts: 'Blueprint/Reports/log.html', fingerprint: true
        }
      }
    }
  }
  post{
    always{
      bat 'docker container stop chrome'
      bat 'docker container rm chrome'
    }
  }
}
